# it has TC : o(nxnxn) 
def maxSubArray1(A):
        #subarray = []
        max_subarray = 0
        for i in range(len(A)+1):
            for j in range(i+1, len(A)+1):
                #print((i,j),(A[i:j]), end = " ")
                if sum(A[i:j]) > max_subarray:
                    max_subarray = sum(A[i:j])
                    # subarray = []
                    # subarray.append(A[i:j])
        if max_subarray == 0:
            return max(A)
        
        return max_subarray
# solved by kadane's Algorithm
def maxSubArray(A):
    cur_max = 0
    acutal_max = 0
    for i in range(len(A)):
        cur_max = cur_max + A[i]
        if cur_max < 0:
            cur_max = 0 
        
        if cur_max > acutal_max:
            acutal_max = cur_max
    return acutal_max if acutal_max > 0 else max(A)


A = [ -200, -118, -277, -353, -99, -361, -480, 43, -437, -116, -468, -466, -86, -307, -417, -190, -57, -438, -148, -149, 38, -316, 
    -298, -455, -220, -403, -146, -398, -91, -325, 66, -145, -307, -396, -8, 25, -377, 92, -370, -77, -96, -346, 51, -36, -125, 
    -462, -418, -122, 53, -411, 79, -236, 50, 38, -64, -255, -248, -314, -74, -281, -103, -152, -171, -309, -169, -256, -268, -372, 
    -305, -151, -128, -315, -414, -373, -42, -152, -498, 89, -237, -302, -495, -193, -30, 25, -403, -328, -361, -82, -157, -471, 
    -90, -45, 40, -170, -132, -142, -197, -382, -261, -159, -434, -476, 15, -191, -154, -21, -96, -116, -12, -133, 
    -333, -72, -472, -197, -329, -261, -203, -183, -387, 93, -72, 39, -6, -440, -408, 12, -133, -397, -373, -370, -408,
    -288, 23, -66, -282, -210, 78, -480, -311, -267, -100, 32, -130, 4, 99, -135, -324, 82, -249, -9, 91, -353, -420, -342, 
    32, -80, -389, 20, 62, -318, -458, -459, -198, -57, 14, -205, 18, -227, 52, -199, -139, -481, -200, -37, 42, 87, -431, 
    41, -241, -271, -115, 25, -310, 0, -457, -166, -205, -488, -94, -416, -322, -457, -134, -413, -393, -430, -338, -160, 
    75, -234, -281, -405, -464, 39, -485, -274, 59, -148, -409, -415, 64, -319, -327, -121, 48, -276, -68, -214, -279, -170, 
    9, -259, -320, -414, -49, -106, -367, -348, -429, -368, -175, -27, 51, 22, 18, 98, -117, -341, -29, -21, -308, -134, -89, 
    58, -88, 9, -250, -4, 73, 9, 51, -188, -360, -234, -36, -386, -187, -117, 54, -400, -319, -133, -50, -93, -389, -42, -84, 
    -101, -483, -471, -362, -35, -349, -267, -133, 47, -23, -339, -378, -118, -363, -496, 91, -211, 55, 70, -447, -457, 10, 
    -72, 98, 85, -114, -367, 20, -43, -155, -455, 45, -385, -495, -471, -78, 98, -155, 52, -93, 50, -489, -292, 45, 5, 43, 6, 
    -173, 3, -470, -468, -34, -187, -443, -163, -55, -405, -74, -370, -95, -67, -225, -455, -251, -89, -161, -56, -282, 96, 
    74, -176, 79, -36, 13, -378, -133, -270, 40, -235, -265, 54, -338, -31, -297, -284, -339, -165, -305, -205, -231, -37, 
    43, -431, -309, -204, -95, -189, -289, -287, -161, -412, 3, -25, -379, 64, -222, -474, -145, -373, -317, 63, -366, -216, 
    -93, -343, -26, -317, -230, -102, -329, -201, -341, -119, 91, -22, -347, -333, -266, 93, 9, -158, -363, -36, -411, 82, -
    59, -183, -295, -400, -88, -448, -12, -336, -345, -427, 35, -93, -208, 65, 17, -116, 74, -86, -68, -259, 89, -120, -274, 
    -37, -265, -202, -327, -65, -351, -122, -427, 53, -431, -319, -393, -128, -197, 72, -265, 50, -14, -311, -225, -209, -314, 
    -348, -14, 95, -251, -348, -100, -341, -97, -165, -355, -147, -13, -490, -463, -188, 40, -13, -345, 28, -4, -478, -351, 
    -161, -352, -215, -348, -417, -193, -131, 29, -127, -478, -419, 29, -300, -210, -40, -277, -374, 31, -129, -92, -106, -183, 
    -426, -59, -122, -200, -362, -463, 46, -210, -106, 58, -22, -334, -250, -78, 40, -302, -211, -316, -2, -218, -169, -366, 
    -175, -301, -345, -19, -499, -49, -152, -364, 81, -384, -301, 43, -288, -362, -452, -131, -473, -296, -440, -499, -168, -83, 
    -42, -325, 7, -442, -400, -413, -79, -448, -288, 84, -289, 68, -336, -345, 44, -287, 12, -233, -208, -322, -249, -386, -145, 
    -363, -467, 76, 60, -254, -177, -451, -320, 10, -115, 84, -166, -35, -180, -132, -351, 54, -227, -190, -284, -381, 77, -463, 
    -34, 30, -421, -216, -98, -60, -147, -370, -483, -342, -309, -484, -392, -497, -359, -477, -483, 56, -359, -231, -339, -194, 
    59, -73, 60, 55, -61, -244, -402, -201, -377, -269, -392, -301, 77, -124, 29, -224, -392, -208, -298, 76, -43, -292, 63, -131, 
    -321, -223, 48, -82, -462, -267, 83, -213, -242, 54, -202, -190, -411, -238, 82, -319, -145, -486, -426, -54, -361, -449, -102, 
    -4, -24, -488, -447, -133, -415, -341, -2, -12, -212, -207, -267, -159, 43, 18, -2, -303, -292, -325, -400, -105, -461, -26, 
    -213, -138, -477, 60, -28, 72, 47, -185, -304, -219, 51, 9, 41, -76, -108, -500, 67, -297, -17, -89, -247, 76, 58, 3, -133, 
    61, -72, 49, -235, -388, -62, -34, 0, -318, -248, -146, -220, -84, -425, 78, -198, -49, -401, -453, 82, -488, 57, -197, -234, 
    -197, -405, -177, 84, -370, -463, -111, -297, -322, -192, -63, -406, -110, -304, -140, -204, -52, -211, -482, -50, -356, -195, 
    -395, 12, -445, -272, -238, -309, -238, -453, -426, -150, -108, -299, -257, -193, -118, -340, -288, -27, 28, 6, -355, -473, 
    -479, 27, -462, -69, -471, -487, -153, -339, -59, -215, -496, -49, -105, -317, -416, -310, -165, -59, -315, -443, -347, -418, 
    -431, -344, -477, -222, -294, -11, -41, -311, -331, 67, -228, 97, -179, -490, -346, 19, -364, -449, -144, -258, -485, 21, -377, 
    -91, -164, -108, -95, 7, -95, -348 ]
print(maxSubArray(A))